// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package cn.jhc.myexam.client.managed.activity;
import cn.jhc.myexam.client.managed.activity.AttemptEditActivityWrapper.View;
import cn.jhc.myexam.client.managed.request.ApplicationRequestFactory;
import cn.jhc.myexam.client.managed.ui.AttemptEditView;
import cn.jhc.myexam.client.proxy.AttemptProxy;
import cn.jhc.myexam.client.proxy.QuizProxy;
import cn.jhc.myexam.client.proxy.UserProxy;
import cn.jhc.myexam.client.scaffold.activity.IsScaffoldMobileActivity;
import cn.jhc.myexam.client.scaffold.place.ProxyEditView;
import cn.jhc.myexam.client.scaffold.place.ProxyListPlace;
import cn.jhc.myexam.client.scaffold.place.ProxyPlace;
import cn.jhc.myexam.shared.domain.QuestionType;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.event.shared.EventBus;
import com.google.gwt.place.shared.Place;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.Receiver;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

public abstract class AttemptEditActivityWrapper_Roo_Gwt implements Activity, IsScaffoldMobileActivity {

    protected Activity wrapped;

    protected View<?> view;

    protected ApplicationRequestFactory requests;

    @Override
    public void start(AcceptsOneWidget display, EventBus eventBus) {
        view.setQuestionTypePickerValues(Arrays.asList(QuestionType.values()));
        view.setUserPickerValues(Collections.<UserProxy>emptyList());
        requests.userRequest().findUserEntries(0, 50).with(cn.jhc.myexam.client.managed.ui.renderer.UserProxyRenderer.instance().getPaths()).fire(new Receiver<List<UserProxy>>() {

            public void onSuccess(List<UserProxy> response) {
                List<UserProxy> values = new ArrayList<UserProxy>();
                values.add(null);
                values.addAll(response);
                view.setUserPickerValues(values);
            }
        });
        view.setQuizPickerValues(Collections.<QuizProxy>emptyList());
        requests.quizRequest().findQuizEntries(0, 50).with(cn.jhc.myexam.client.managed.ui.renderer.QuizProxyRenderer.instance().getPaths()).fire(new Receiver<List<QuizProxy>>() {

            public void onSuccess(List<QuizProxy> response) {
                List<QuizProxy> values = new ArrayList<QuizProxy>();
                values.add(null);
                values.addAll(response);
                view.setQuizPickerValues(values);
            }
        });
        wrapped.start(display, eventBus);
    }

    public interface View_Roo_Gwt<V extends cn.jhc.myexam.client.managed.ui.AttemptEditView<V>> extends AttemptEditView<V> {

        void setQuestionTypePickerValues(Collection<QuestionType> values);

        void setUserPickerValues(Collection<UserProxy> values);

        void setQuizPickerValues(Collection<QuizProxy> values);
    }
}
