package cn.jhc.myexam.vaadin.view;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import cn.jhc.myexam.server.service.QuestionsService;
import cn.jhc.myexam.shared.domain.QuestionType;
import cn.jhc.myexam.vaadin.builder.VaadinEntityBuilder;
import cn.jhc.myexam.vaadin.factory.QuestionTypeFactory;
import cn.jhc.myexam.vaadin.window.AddCategoryWindow;
import cn.jhc.myexam.vaadin.window.AddQuestionWindow;

import com.vaadin.data.Container;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbstractSelect.ItemCaptionMode;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.NativeButton;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Table;
import com.vaadin.ui.Tree;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;

@Component @Scope("prototype") @SuppressWarnings("serial")
public class QuestionsManagerView extends CustomComponent implements View, ValueChangeListener{

	private final QuestionsService questionsService;

	private VerticalLayout mainLayout;

	private Table questionsTable;

	private VerticalLayout categoryLayout;
	
	private Tree categoryTree;
	
	private HorizontalLayout selectionsLayout;
	
	private ComboBox questionTypesComboBox;

	private HorizontalLayout buttonsLayout;

	private NativeButton addQuestionButton;

	private NativeButton importQuestionsButton;

	private BeanItemContainer<?> container;

	private Label currentCategoryLabel;

	private NativeButton addCategroyButton;
	/**
	 * The constructor should first build the MAIN layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	@Autowired
	public QuestionsManagerView(QuestionsService qService) {
		this.questionsService = qService;
		buildMainLayout();
		setCompositionRoot(mainLayout);

		questionTypesComboBox.addValueChangeListener(this);
//		questionTypesComboBox.setValue(QuestionType.SINGLE_CHOICE);
		
		addCategroyButton.addClickListener(new Button.ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				UI.getCurrent().addWindow(new AddCategoryWindow());
			}
		});
		
		addQuestionButton.addClickListener(new Button.ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				QuestionType type = (QuestionType) questionTypesComboBox.getValue();
				if(type == null) {
					Notification.show("没有选择题目类型！", Notification.Type.ERROR_MESSAGE);
					return;
				}
				UI.getCurrent().addWindow(new AddQuestionWindow(QuestionsManagerView.this, type, questionsService));
			}
		});
	}

	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		buildCategoryLayout();
		mainLayout.addComponent(categoryLayout);
		
		// selectionsLayout
		buildSelectionsLayout();
		mainLayout.addComponent(selectionsLayout);
		
		// questionsTable
		questionsTable = new Table();
		questionsTable.setImmediate(true);
		questionsTable.setWidth("100.0%");
		questionsTable.setHeight("-1px");
		mainLayout.addComponent(questionsTable);
		
		buildButtonsLayout();
		mainLayout.addComponent(buttonsLayout);
		
		return mainLayout;
	}
	
	private void buildCategoryLayout() {
		categoryLayout = new VerticalLayout();
		
		categoryTree = new Tree("题库类别");
		categoryLayout.addComponent(categoryTree);
		
		currentCategoryLabel = new Label("当前选择的题库类别为：");
		categoryLayout.addComponent(currentCategoryLabel);
		
		addCategroyButton = new NativeButton("添加新的题库类别");
		categoryLayout.addComponent(addCategroyButton);
	}

	private HorizontalLayout buildSelectionsLayout() {
		// common part: create layout
		selectionsLayout = new HorizontalLayout();
		selectionsLayout.setImmediate(false);
		selectionsLayout.setWidth("100.0%");
		selectionsLayout.setHeight("-1px");
		selectionsLayout.setMargin(false);
		
		// questionTypesComboBox
		final Container questionTypeContainer = QuestionTypeFactory.getQuestionTypeContainer();
		questionTypesComboBox = new ComboBox("选择题型", questionTypeContainer);
		questionTypesComboBox.setItemCaptionMode(ItemCaptionMode.PROPERTY);
		questionTypesComboBox.setItemCaptionPropertyId("description");
		questionTypesComboBox.setImmediate(true);
		questionTypesComboBox.setWidth("-1px");
		questionTypesComboBox.setHeight("-1px");
		selectionsLayout.addComponent(questionTypesComboBox);

		return selectionsLayout;
	}

	private HorizontalLayout buildButtonsLayout() {
		// common part: create layout
		buttonsLayout = new HorizontalLayout();
		buttonsLayout.setImmediate(false);
		buttonsLayout.setWidth("-1px");
		buttonsLayout.setHeight("40px");
		buttonsLayout.setMargin(false);
		buttonsLayout.setSpacing(true);
		
		// addQuestionButton
		addQuestionButton = new NativeButton();
		addQuestionButton.setStyleName("page-button");
		addQuestionButton.setCaption("添加题目");
		addQuestionButton.setImmediate(true);
		addQuestionButton.setDescription("点击这里可以添加单个题目");
		addQuestionButton.setWidth("-1px");
		addQuestionButton.setHeight("100.0%");
		buttonsLayout.addComponent(addQuestionButton);
		buttonsLayout
				.setComponentAlignment(addQuestionButton, new Alignment(48));
		
		// importQuestionsButton
		importQuestionsButton = new NativeButton();
		importQuestionsButton.setStyleName("page-button");
		importQuestionsButton.setCaption("从Excel导入多个题目");
		importQuestionsButton.setImmediate(true);
		importQuestionsButton.setDescription("点击这里可以从Excel中导入多个题目");
		importQuestionsButton.setWidth("-1px");
		importQuestionsButton.setHeight("100.0%");
		buttonsLayout.addComponent(importQuestionsButton);
		buttonsLayout.setComponentAlignment(importQuestionsButton,
				new Alignment(48));
		
		return buttonsLayout;
	}
	
	@Override
	public void enter(ViewChangeEvent event) {
	}

	@SuppressWarnings("rawtypes")
	@Override
	public void valueChange(ValueChangeEvent event) {
		QuestionType type = (QuestionType)event.getProperty().getValue();
		List list = questionsService.findAllQuestions(type);
		Class<?> theClass = type.getEntityClass();
		container = new BeanItemContainer(theClass);
		container.addAll(list);
		VaadinEntityBuilder.create(theClass).modifyTable(questionsTable, container);
	}

	public BeanItemContainer<?> getTableContainer() {
		return container;
	}

}
