package cn.jhc.myexam.vaadin.ui;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Logger;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.Navigator;
import com.vaadin.ui.Accordion;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;

@Component
@Scope("prototype")
public class TeacherNavigator extends CustomComponent {
	
	private static final long serialVersionUID = 1L;

	private static final Logger logger = Logger.getLogger(TeacherNavigator.class.getName());
	
	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Accordion accordion;
	@AutoGenerated
	private VerticalLayout verticalLayout_5;
	@AutoGenerated
	private Button genResultButton;
	@AutoGenerated
	private Button viewResultButton;
	@AutoGenerated
	private VerticalLayout verticalLayout_4;
	@AutoGenerated
	private Button listQuestionsButton;
	@AutoGenerated
	private Button importQuestionsButton;
	@AutoGenerated
	private VerticalLayout verticalLayout_3;
	@AutoGenerated
	private Button listExamButton;
	@AutoGenerated
	private Button addExamButton;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private Button addUserButton;
	@AutoGenerated
	private Button importUsersButton;
	/**
	 * This enum type is used for button id and view name. We keep the button id as same as the view name.
	 * @author luyanfei
	 *
	 */
	public static enum NavigateItem{
		import_users("导入考生帐号"), add_user("添加考生"), add_exam("添加考试"), list_exams("查看考试"),
		import_questions("导入题目"), list_questions("查看题目"), view_result("查看结果"), gen_result("生成结果");
		private String description;
		private NavigateItem(String description){
			this.description = description;
		}
		public String getDescription(){
			return this.description;
		}
	}

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public TeacherNavigator() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		addListenerForButtons();
	}

	private void addListenerForButtons() {
		//Button caption to NavigateItem map
		Map<String, NavigateItem> map = new HashMap<String, TeacherNavigator.NavigateItem>();
		for(NavigateItem item : NavigateItem.values()){
			map.put(item.getDescription(), item);
		}
		for(Iterator<com.vaadin.ui.Component> iterator = accordion.iterator(); iterator.hasNext();){
			com.vaadin.ui.Component component = iterator.next();
			if (component instanceof Button) {
				Button button = (Button) component;
				final NavigateItem item = map.get(button.getCaption());
				if(item == null) 
					continue;
				//set button's id to NavigateItem's name
				button.setId(item.toString());
				button.addClickListener(new Button.ClickListener() {
					
					@Override
					public void buttonClick(ClickEvent event) {
						Navigator navigator = UI.getCurrent().getNavigator();
						if(navigator == null){
							logger.severe("getNavigator returns null, please check UI.");
							return;
						}
						navigator.navigateTo(item.toString());
					}
				});
			}
		}
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// accordion
		accordion = buildAccordion();
		mainLayout.addComponent(accordion);
		
		return mainLayout;
	}

	@AutoGenerated
	private Accordion buildAccordion() {
		// common part: create layout
		accordion = new Accordion();
		accordion.setImmediate(true);
		accordion.setWidth("100.0%");
		accordion.setHeight("-1px");
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		accordion.addTab(verticalLayout_2, "考生管理", null);
		
		// verticalLayout_3
		verticalLayout_3 = buildVerticalLayout_3();
		accordion.addTab(verticalLayout_3, "考试管理", null);
		
		// verticalLayout_4
		verticalLayout_4 = buildVerticalLayout_4();
		accordion.addTab(verticalLayout_4, "题库管理", null);
		
		// verticalLayout_5
		verticalLayout_5 = buildVerticalLayout_5();
		accordion.addTab(verticalLayout_5, "结果管理", null);
		
		return accordion;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(false);
		
		// importUsersButton
		importUsersButton = new Button();
		importUsersButton.setCaption("导入考生帐号");
		importUsersButton.setImmediate(true);
		importUsersButton.setWidth("100.0%");
		importUsersButton.setHeight("-1px");
		verticalLayout_2.addComponent(importUsersButton);
		
		// addUserButton
		addUserButton = new Button();
		addUserButton.setCaption("添加考生");
		addUserButton.setImmediate(true);
		addUserButton.setWidth("100.0%");
		addUserButton.setHeight("-1px");
		verticalLayout_2.addComponent(addUserButton);
		
		return verticalLayout_2;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_3() {
		// common part: create layout
		verticalLayout_3 = new VerticalLayout();
		verticalLayout_3.setImmediate(false);
		verticalLayout_3.setWidth("100.0%");
		verticalLayout_3.setHeight("-1px");
		verticalLayout_3.setMargin(false);
		
		// addExamButton
		addExamButton = new Button();
		addExamButton.setCaption("添加考试");
		addExamButton.setImmediate(true);
		addExamButton.setWidth("100.0%");
		addExamButton.setHeight("-1px");
		verticalLayout_3.addComponent(addExamButton);
		
		// listExamButton
		listExamButton = new Button();
		listExamButton.setCaption("查看考试");
		listExamButton.setImmediate(true);
		listExamButton.setWidth("100.0%");
		listExamButton.setHeight("-1px");
		verticalLayout_3.addComponent(listExamButton);
		
		return verticalLayout_3;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_4() {
		// common part: create layout
		verticalLayout_4 = new VerticalLayout();
		verticalLayout_4.setImmediate(false);
		verticalLayout_4.setWidth("100.0%");
		verticalLayout_4.setHeight("-1px");
		verticalLayout_4.setMargin(false);
		
		// importQuestionsButton
		importQuestionsButton = new Button();
		importQuestionsButton.setCaption("导入题目");
		importQuestionsButton.setImmediate(true);
		importQuestionsButton.setWidth("100.0%");
		importQuestionsButton.setHeight("-1px");
		verticalLayout_4.addComponent(importQuestionsButton);
		
		// listQuestionsButton
		listQuestionsButton = new Button();
		listQuestionsButton.setCaption("查看题目");
		listQuestionsButton.setImmediate(true);
		listQuestionsButton.setWidth("100.0%");
		listQuestionsButton.setHeight("-1px");
		verticalLayout_4.addComponent(listQuestionsButton);
		
		return verticalLayout_4;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_5() {
		// common part: create layout
		verticalLayout_5 = new VerticalLayout();
		verticalLayout_5.setImmediate(false);
		verticalLayout_5.setWidth("100.0%");
		verticalLayout_5.setHeight("-1px");
		verticalLayout_5.setMargin(false);
		
		// viewResultButton
		viewResultButton = new Button();
		viewResultButton.setCaption("查看结果");
		viewResultButton.setImmediate(true);
		viewResultButton.setWidth("100.0%");
		viewResultButton.setHeight("-1px");
		verticalLayout_5.addComponent(viewResultButton);
		
		// genResultButton
		genResultButton = new Button();
		genResultButton.setCaption("生成结果");
		genResultButton.setImmediate(true);
		genResultButton.setWidth("100.0%");
		genResultButton.setHeight("-1px");
		verticalLayout_5.addComponent(genResultButton);
		
		return verticalLayout_5;
	}

}
